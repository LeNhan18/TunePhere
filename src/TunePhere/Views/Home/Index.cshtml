@model IEnumerable<TunePhere.Models.Song>

@using Microsoft.Extensions.DependencyInjection
@inject AppDbContext DbContext
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<!-- CSS-->
<link rel="stylesheet" href="~/css/homepage.css">
<link rel="stylesheet" href="~/css/player.css">

@{
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}
<input type="hidden" name="__RequestVerificationToken" value="@token" />

<!-- Audio Player -->
<audio id="audioPlayer" style="display: none;">
    <source src="" type="audio/mpeg">
</audio>

<!-- Video Modal -->
<div class="modal fade" id="videoModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div class="video-container">
                    <iframe id="videoFrame" width="100%" height="480" frameborder="0" 
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                            allowfullscreen></iframe>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="main-container">
    <!-- Sidebar -->
    <div id="sidebar" class="sidebar">
        <div class="sidebar-header">
            <div class="library-header">
                <div class="library-title">
                    <i class="fas fa-book"></i>
                    <h2>Thư viện</h2>
                </div>
                <div class="library-actions">
                    <button class="add-button" title="Thêm mới" data-bs-toggle="collapse" data-bs-target="#addItemOptions">
                        <i class="fas fa-plus"></i>
                    </button>
                    <!-- Modal -->
                    <div class="collapse" id="addItemOptions">
                        <div class="card" style="background-color: #1e1e1e; border: none;">
                            <div class="card-body">
                                <a href="@Url.Action("Index", "Albums")" class="btn btn-secondary w-100 mb-2">Thêm Album</a>
                                <a href="@Url.Action("Index", "Playlists")" class="btn btn-secondary w-100">Thêm Playlist</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="library-toggle">
                <button id="toggle-sidebar" class="toggle-btn">
                    <i class="fas fa-chevron-left"></i>
                </button>
            </div>
        </div>
        
        <div class="sidebar-content">
            <!-- Các danh mục thư viện sẽ được hiển thị ở đây -->
            <a href="@Url.Action("Index", "UserFavoriteSongs")" class="library-item">
                <i class="fas fa-music"></i>
                <span>Bài hát đã thích</span>
            </a>
            <a href="@Url.Action("Index", "Albums")" class="library-item">
                <i class="fas fa-compact-disc"></i>
                <span>Album đã lưu</span>
            </a>
            <a href="@Url.Action("Index", "Artists")" class="library-item">
                <i class="fas fa-microphone-alt"></i>
                <span>Nghệ sĩ đang theo dõi</span>
            </a>
            <a href="#" class="library-item">
                <i class="fas fa-podcast"></i>
                <span>Podcast</span>
            </a>
        </div>
    </div>

    <!-- Main Content -->
    <div id="main-content" class="content">
        <!-- Featured Playlist -->
        <section class="featured-playlist">
            <div class="playlist-card">
                <div class="video-background">
                    @{
                        var featuredSong = Model.OrderByDescending(s => s.PlayCount).FirstOrDefault();
                    }
                    @if (featuredSong != null && !string.IsNullOrEmpty(featuredSong.VideoUrl))
                    {
                        <div class="video-container">
                            @{
                                var videoUrl = featuredSong.VideoUrl;
                                var videoId = "";
                                if (videoUrl.Contains("v="))
                                {
                                    videoId = videoUrl.Split(new[] { "v=" }, StringSplitOptions.None)[1];
                                    if (videoId.Contains("&"))
                                    {
                                        videoId = videoId.Split('&')[0];
                                    }
                                }
                                else if (videoUrl.Contains("youtu.be/"))
                                {
                                    videoId = videoUrl.Split(new[] { "youtu.be/" }, StringSplitOptions.None)[1];
                                }
                                var embedUrl = $"https://www.youtube.com/embed/{videoId}?autoplay=1&mute=1&controls=0&loop=1&playlist={videoId}&showinfo=0&rel=0&modestbranding=1";
                            }
                            <iframe width="100%" height="100%" 
                                    src="@embedUrl" 
                                    frameborder="0" 
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                                    allowfullscreen>
                            </iframe>
                        </div>
                    }
                </div>
                <div class="playlist-content">
                    <span class="playlist-label">CURRENT PLAYING</span>
                    <h1 class="playlist-title">@featuredSong?.Title</h1>
                    <p class="playlist-description">By @featuredSong?.Artists?.ArtistName</p>
                    <div class="playlist-stats">
                        <span class="likes">
                            <i class="fa-solid fa-eye"></i>
                            @featuredSong?.PlayCount View
                        </span>
                    </div>
                    <button class="play-button" onclick="showVideo('@featuredSong?.VideoUrl')">
                        <i class="fas fa-play"></i>
                    </button>
                </div>
            </div>
        </section>

        <!-- Song List -->
        <section class="song-list">
            <div class="song-grid">
                @foreach (var song in Model.OrderByDescending(s => s.PlayCount).Take(6))
                {
                    <div class="song-item" data-song-id="@song.SongId" data-title="@song.Title" 
                         data-artist="@song.Artists?.ArtistName" data-audio-url="@song.FileUrl" 
                         data-image-url="@song.ImageUrl" data-video-url="@song.VideoUrl">
                        <img src="@song.ImageUrl" alt="@song.Title">
                        @if (!string.IsNullOrEmpty(song.VideoUrl))
                        {
                            <button class="video-btn" onclick="showVideo('@song.VideoUrl')">
                                <i class="fas fa-video"></i>
                            </button>
                        }
                        <h3>@song.Title</h3>
                        <p>@song.Artists?.ArtistName</p>
                    </div>
                }
            </div>
        </section>

        <!-- Những bài hát thịnh hành -->
        <section class="music-section">
            <h2 class="section-title">Những bài hát thịnh hành</h2>
            <div class="music-grid">
                @foreach (var song in Model.OrderByDescending(s => s.PlayCount).Take(4))
                {
                    <div class="music-card" ondblclick="location.href='/Songs/Details/@song.SongId'" data-song-id="@song.SongId" data-title="@song.Title" data-artist="@song.Artists?.ArtistName" data-audio-url="@song.FileUrl" data-image-url="@song.ImageUrl" data-video-url="@song.VideoUrl">
                        <div class="card-img-container">
                            <img src="@song.ImageUrl" alt="@song.Title">
                            <div class="play-overlay">
                                <button class="play-btn" onclick="playSong(this)">
                                    <i class="fas fa-play"></i>
                                </button>
                                @if (!string.IsNullOrEmpty(song.VideoUrl))
                                {
                                    <button class="video-btn" onclick="showVideo('@song.VideoUrl')" title="Xem MV">
                                        <i class="fas fa-film"></i>
                                    </button>
                                }
                            </div>
                        </div>
                        <h3 class="song-title">@song.Title</h3>
                        <p class="artist-name">@song.Artists?.ArtistName</p>
                        <p class="play-count">@song.PlayCount lượt nghe</p>
                    </div>
                }
            </div>
        </section>

        <!-- Nghệ sĩ phổ biến -->
        <section class="music-section">
            <h2 class="section-title">Nghệ sĩ phổ biến</h2>
            <div class="music-grid">
                @foreach (var artist in ViewBag.PopularArtists)
                {
                    <div class="artist-card" onclick="location.href='/Artists/Profile/@artist.ArtistId'">
                        <div class="card-img-container artist-img">
                            <img src="@(string.IsNullOrEmpty(artist.ImageUrl) ? "/images/artist-placeholder.jpg" : artist.ImageUrl)" alt="@artist.ArtistName">
                            <div class="play-overlay">
                                <button class="play-btn" onclick="location.href='@Url.Action("Profile", "Artists", new { id = artist.ArtistId })'">
                                    <i class="fas fa-play"></i>
                                </button>
                            </div>
                        </div>
                        <h3 class="artist-name">@artist.ArtistName</h3>
                        <p class="artist-type">Nghệ sĩ • @artist.Songs.Count bài hát</p>
                    </div>
                }
            </div>
        </section>

        <!-- Album nổi tiếng -->
        <section class="music-section">
            <h2 class="section-title">Album nổi tiếng</h2>
            <div class="music-grid">
                @foreach (var album in ViewBag.PopularAlbums)
                {
                    <div class="music-card">
                        <div class="card-img-container">
                            <img src="@(string.IsNullOrEmpty(album.ImageUrl) ? "/images/album-placeholder.jpg" : album.ImageUrl)" alt="@album.AlbumName">
                            <div class="play-overlay">
                                <button class="play-btn" onclick="location.href='@Url.Action("Details", "Albums", new { id = album.AlbumId })'">
                                    <i class="fas fa-play"></i>
                                </button>
                            </div>
                        </div>
                        <h3 class="song-title">@album.AlbumName</h3>
                        <p class="artist-name">@album.Artists.ArtistName</p>
                    </div>
                }
            </div>
        </section>

        <!-- Bảng xếp hạng nổi bật -->
        <section class="music-section">
            <h2 class="section-title">Bảng xếp hạng nổi bật</h2>
            <div class="music-grid">
         
                @for (int i = 0; i < 8; i++)
                {
                    <div class="chart-card">
                        <div class="card-img-container">
                            <img src="/images/chart-placeholder.jpg" alt="Bảng xếp hạng">
                            <div class="play-overlay">
                                <button class="play-btn">
                                    <i class="fas fa-play"></i>
                                </button>
                            </div>
                        </div>
                        <h3 class="chart-title">Top 50 Việt Nam</h3>
                        <p class="chart-desc">Cập nhật hàng tuần</p>
                    </div>
                }
            </div>
        </section>
    </div>
</div>

<!-- Now Playing Bar -->
<!-- Xóa phần này vì đã có player bar trong _NavigationPartial.cshtml -->

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let currentSongIndex = -1;
    let songs = [];

    // Khởi tạo danh sách bài hát
    function initializeSongs() {
        const songElements = document.querySelectorAll('.music-card, .song-item');
        songs = Array.from(songElements).map(card => ({
            id: card.dataset.songId,
            title: card.dataset.title,
            artist: card.dataset.artist,
            audioUrl: card.dataset.audioUrl,
            imageUrl: card.dataset.imageUrl,
            videoUrl: card.dataset.videoUrl
        }));
    }

    // Khởi tạo các event listeners
    document.addEventListener('DOMContentLoaded', function() {
        initializeSongs();

        // Thêm sự kiện click cho các music card và song item
        document.querySelectorAll('.music-card, .song-item').forEach((card, index) => {
            card.addEventListener('click', () => {
                playByIndex(index);
            });
        });

        // Thêm sự kiện click cho các nút play
        document.querySelectorAll('.play-btn').forEach(button => {
            button.addEventListener('click', (e) => {
                e.stopPropagation();
                const card = button.closest('.music-card, .song-item');
                const index = Array.from(document.querySelectorAll('.music-card, .song-item')).indexOf(card);
                if (index !== -1) {
                    playByIndex(index);
                }
            });
        });

        // Thêm sự kiện click cho các nút video
        document.querySelectorAll('.video-btn').forEach(button => {
            button.addEventListener('click', (e) => {
                e.stopPropagation();
                const card = button.closest('.music-card, .song-item');
                const videoUrl = card.dataset.videoUrl;
                if (videoUrl) {
                    showVideo(videoUrl, card);
                }
            });
        });
    });

    // Hàm phát nhạc theo index
    function playByIndex(index) {
        if (index < 0 || index >= songs.length) return;
        
        const song = songs[index];
        currentSongIndex = index;
        
        // Sử dụng hàm playAudio từ _NavigationPartial.cshtml
        const songItem = {
            dataset: {
                songId: song.id,
                songUrl: song.audioUrl,
                songTitle: song.title,
                songArtist: song.artist,
                songImage: song.imageUrl
            }
        };
        
        playAudio(songItem);
    }

    function showVideo(url, card) {
        if (!url) return;
        
        let videoId = "";
        if (url.includes("v=")) {
            videoId = url.split("v=")[1];
            const ampersandPosition = videoId.indexOf('&');
            if (ampersandPosition !== -1) {
                videoId = videoId.substring(0, ampersandPosition);
            }
        } else if (url.includes("youtu.be/")) {
            videoId = url.split("youtu.be/")[1];
        }
        
        // Tạo URL nhúng cho video với mute=1 để tắt âm thanh
        const embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1&mute=1&controls=1&showinfo=0&rel=0&modestbranding=1&fs=1`;
        
        // Tìm container video trong featured playlist
        const featuredVideo = document.querySelector('.featured-playlist .video-container iframe');
        if (featuredVideo) {
            featuredVideo.src = embedUrl;
        }
        
        // Cập nhật thông tin bài hát trong featured playlist
        const playlistTitle = document.querySelector('.playlist-title');
        const playlistDescription = document.querySelector('.playlist-description');
        
        // Lấy thông tin từ card nếu có
        if (card instanceof HTMLElement) {
            const title = card.dataset.title;
            const artist = card.dataset.artist;
            if (playlistTitle) playlistTitle.textContent = title;
            if (playlistDescription) playlistDescription.textContent = `By ${artist}`;
        }
    }
</script>

@* <!-- Add this CSS to your homepage.css file --> *@
@* <style> *@
@* .now-playing-bar { *@
@*     position: fixed; *@
@*     bottom: 0; *@
@*     left: 0; *@
@*     right: 0; *@
@*     height: 90px; *@
@*     background: linear-gradient(to right, #ae2896, #509bf5); *@
@*     padding: 16px; *@
@*     display: flex; *@
@*     justify-content: space-between; *@
@*     align-items: center; *@
@*     z-index: 1000; *@
@*     box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.5); *@
@* } *@

@* .now-playing-left { *@
@*     display: flex; *@
@*     align-items: center; *@
@*     width: 30%; *@
@*     min-width: 180px; *@
@* } *@

@* .now-playing-cover { *@
@*     width: 56px; *@
@*     height: 56px; *@
@*     margin-right: 16px; *@
@*     border-radius: 4px; *@
@*     overflow: hidden; *@
@*     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); *@
@* } *@

@* .now-playing-cover img { *@
@*     width: 100%; *@
@*     height: 100%; *@
@*     object-fit: cover; *@
@* } *@

@* .track-info { *@
@*     display: flex; *@
@*     flex-direction: column; *@
@*     max-width: calc(100% - 72px); *@
@* } *@

@* .track-info .song-name { *@
@*     color: white; *@
@*     font-size: 14px; *@
@*     font-weight: 500; *@
@*     margin-bottom: 4px; *@
@*     white-space: nowrap; *@
@*     overflow: hidden; *@
@*     text-overflow: ellipsis; *@
@* } *@

@* .track-info .artist-name { *@
@*     color: rgba(255, 255, 255, 0.7); *@
@*     font-size: 12px; *@
@*     white-space: nowrap; *@
@*     overflow: hidden; *@
@*     text-overflow: ellipsis; *@
@* } *@

@* .now-playing-center { *@
@*     flex: 1; *@
@*     max-width: 722px; *@
@*     display: flex; *@
@*     flex-direction: column; *@
@*     align-items: center; *@
@*     padding: 0 20px; *@
@* } *@

@* .player-controls { *@
@*     display: flex; *@
@*     align-items: center; *@
@*     gap: 20px; *@
@*     margin-bottom: 8px; *@
@* } *@

@* .control-button { *@
@*     background: none; *@
@*     border: none; *@
@*     color: white; *@
@*     cursor: pointer; *@
@*     padding: 8px; *@
@*     transition: transform 0.2s; *@
@* } *@

@* .control-button:hover { *@
@*     transform: scale(1.1); *@
@* } *@

@* .play-pause-btn { *@
@*     width: 40px; *@
@*     height: 40px; *@
@*     border-radius: 50%; *@
@*     background: white; *@
@*     color: #000; *@
@*     display: flex; *@
@*     align-items: center; *@
@*     justify-content: center; *@
@* } *@

@* .play-pause-btn:hover { *@
@*     transform: scale(1.1); *@
@*     background: #f0f0f0; *@
@* } *@

@* .playback-bar { *@
@*     width: 100%; *@
@*     display: flex; *@
@*     align-items: center; *@
@*     gap: 8px; *@
@* } *@

@* .time { *@
@*     color: rgba(255, 255, 255, 0.7); *@
@*     font-size: 12px; *@
@*     min-width: 40px; *@
@*     text-align: center; *@
@* } *@

@* .progress-bar { *@
@*     flex: 1; *@
@*     position: relative; *@
@*     height: 4px; *@
@* } *@

@* .seek-bar { *@
@*     width: 100%; *@
@*     height: 4px; *@
@*     -webkit-appearance: none; *@
@*     background: transparent; *@
@*     position: relative; *@
@*     z-index: 2; *@
@*     cursor: pointer; *@
@* } *@

@* .progress-bar-bg { *@
@*     position: absolute; *@
@*     top: 50%; *@
@*     left: 0; *@
@*     right: 0; *@
@*     height: 4px; *@
@*     background: rgba(255, 255, 255, 0.3); *@
@*     border-radius: 2px; *@
@*     transform: translateY(-50%); *@
@* } *@

@* .now-playing-right { *@
@*     width: 30%; *@
@*     min-width: 180px; *@
@*     display: flex; *@
@*     align-items: center; *@
@*     justify-content: flex-end; *@
@*     gap: 8px; *@
@* } *@

@* .volume-bar-container { *@
@*     width: 100px; *@
@*     position: relative; *@
@*     height: 4px; *@
@* } *@

@* .volume-bar { *@
@*     width: 100%; *@
@*     height: 4px; *@
@*     -webkit-appearance: none; *@
@*     background: transparent; *@
@*     position: relative; *@
@*     z-index: 2; *@
@*     cursor: pointer; *@
@* } *@

@* .volume-bar-bg { *@
@*     position: absolute; *@
@*     top: 50%; *@
@*     left: 0; *@
@*     right: 0; *@
@*     height: 4px; *@
@*     background: rgba(255, 255, 255, 0.3); *@
@*     border-radius: 2px; *@
@*     transform: translateY(-50%); *@
@* } *@

@* input[type="range"] { *@
@*     -webkit-appearance: none; *@
@*     background: transparent; *@
@* } *@

@* input[type="range"]::-webkit-slider-thumb { *@
@*     -webkit-appearance: none; *@
@*     width: 12px; *@
@*     height: 12px; *@
@*     background: white; *@
@*     border-radius: 50%; *@
@*     cursor: pointer; *@
@*     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5); *@
@*     margin-top: -4px; *@
@* } *@

@* input[type="range"]::-webkit-slider-runnable-track { *@
@*     width: 100%; *@
@*     height: 4px; *@
@*     background: rgba(255, 255, 255, 0.3); *@
@*     border-radius: 2px; *@
@*     cursor: pointer; *@
@* } *@

@* @media (max-width: 768px) { *@
@*     .now-playing-bar { *@
@*         padding: 8px; *@
@*     } *@

@*     .now-playing-left { *@
@*         width: 40%; *@
@*     } *@

@*     .now-playing-right { *@
@*         width: 20%; *@
@*     } *@

@*     .volume-bar-container { *@
@*         display: none; *@
@*     } *@
@* } *@
</style>

<style>
    /* CSS để thêm vào homepage.css */
    .sidebar-content a.library-item {
        text-decoration: none;
        color: #aaa;
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 10px 20px;
        transition: all 0.3s ease;
    }

    .sidebar-content a.library-item:hover {
        background-color: rgba(255, 255, 255, 0.1);
        color: #fff;
        text-decoration: none;
    }
</style>