@using System.Text.Json
@using TunePhere.Models
@using System.Security.Claims
@model TunePhere.Models.Song
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    ViewData["Title"] = Model.Title;
    Layout = null;
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

@await Html.PartialAsync("_NavigationPartial")

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="__RequestVerificationToken" content="@token" />
    <title>@Model.Title - TunePhere</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/song-details.css" />
    <link rel="stylesheet" href="@Url.Content("~/css/navigation.css")" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/player.css" />
</head>
<body>
    <!-- Nút quay lại - Được tạo mới và đặt ở vị trí tốt hơn -->
    <div class="back-button-wrapper">
        <a href="@Url.Action("Index", "Home")" class="back-button">
            <i class="fas fa-arrow-left"></i>
        </a>
    </div>

    <div class="song-details-page">
        <!-- Lyrics bên trái -->
        <div class="lyrics-container left-lyrics">
            <div class="lyrics-header">
                <h3>Lời bài hát</h3>
                @if (User.IsInRole("Admin") || (User.Identity.IsAuthenticated && Model.Artists?.userId == User.FindFirstValue(ClaimTypes.NameIdentifier)))
                {
                    <button class="add-lyrics-btn" onclick="showLyricModal()">
                        <i class="fas @(Model.Lyrics != null && Model.Lyrics.Any() ? "fa-edit" : "fa-plus")"></i>
                        <span>@(Model.Lyrics != null && Model.Lyrics.Any() ? "Chỉnh sửa lời bài hát" : "Thêm lời bài hát")</span>
                    </button>
                }
            </div>
            @if (Model.Lyrics != null && Model.Lyrics.Any())
            {
                <div class="lyrics-content">
                    @{
                        var syncedContent = Model.Lyrics.FirstOrDefault()?.SyncedContent;
                        if (!string.IsNullOrEmpty(syncedContent))
                        {
                            try
                            {
                                var syncedData = JsonSerializer.Deserialize<List<SyncedLyricLine>>(syncedContent);
                                <div id="syncedLyricsDisplay">
                                    @foreach (var line in syncedData)
                                    {
                                        <div class="lyric-line" data-time="@line.Time">
                                            <span class="time-marker">[@TimeSpan.FromSeconds(line.Time).ToString(@"mm\:ss")]</span>
                                            <span class="lyric-text">@line.Text</span>
                                        </div>
                                    }
                                </div>
                            }
                            catch (Exception ex)
                            {
                                <div class="error-message">Lỗi hiển thị lyrics: @ex.Message</div>
                            }
                        }
                        else
                        {
                            <pre class="lyric-text">@Model.Lyrics.First().Content</pre>
                        }
                    }
                </div>
            }
            else 
            {
                <div class="no-lyrics-message">
                    <p>Chưa có lời bài hát</p>
                    @if (User.IsInRole("Admin") || (User.Identity.IsAuthenticated && Model.Artists?.userId == User.FindFirstValue(ClaimTypes.NameIdentifier)))
                    {
                        <button class="add-lyrics-btn" onclick="showLyricModal()">
                            <i class="fas fa-plus"></i>
                            <span>Thêm lời bài hát</span>
                        </button>
                    }
                </div>
            }
        </div>

        <!-- Đĩa nhạc ở giữa -->
        <div class="vinyl-player">
            <div class="vinyl-disc @(Model.FileUrl != null ? "can-play" : "")">
                <div class="vinyl-label">
                    <img src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/images/default-song.jpg" : Model.ImageUrl)" alt="@Model.Title" />
                </div>
            </div>
            <div class="vinyl-reflection"></div>
            
            <div class="song-info">
                <h1 class="song-title">@Model.Title</h1>
                <div class="song-meta">
                    @if (Model.Artists != null)
                    {
                        <a href="@Url.Action("Profile", "Artists", new { id = Model.ArtistId })" class="artist-name">
                            @Model.Artists.ArtistName
                        </a>
                    }
                    <div class="song-stats">
                        <span class="stat-item">
                            <i class="fa-solid fa-play"></i>
                            @Model.PlayCount lượt nghe
                        </span>
                        <span class="stat-item">
                            <i class="fa-solid fa-heart"></i>
                            @Model.LikeCount lượt thích
                        </span>
                        <span class="stat-item">
                            <i class="fa-regular fa-calendar"></i>
                            @Model.UploadDate.ToString("dd/MM/yyyy")
                        </span>
                    </div>
                </div>
            </div>

            <div class="player-controls">
                <button class="play-btn" onclick="togglePlay()">
                    <i class="fas fa-play"></i>
                </button>
            </div>

            <!-- Thêm dòng lyrics đang phát -->
            <div class="current-lyric">
                <div class="lyric-text"></div>
            </div>

            <audio id="audioPlayer" src="@Model.FileUrl"></audio>
        </div>

        <!-- Lyrics bên phải -->
        <div class="lyrics-container right-lyrics">
            @if (Model.Lyrics != null && Model.Lyrics.Any())
            {
                <div class="lyrics-content">
                    @{
                        var syncedContent = Model.Lyrics.FirstOrDefault()?.SyncedContent;
                        if (!string.IsNullOrEmpty(syncedContent))
                        {
                            try
                            {
                                var syncedData = JsonSerializer.Deserialize<List<SyncedLyricLine>>(syncedContent);
                                <div id="syncedLyricsDisplay">
                                    @foreach (var line in syncedData)
                                    {
                                        <div class="lyric-line" data-time="@line.Time">
                                            <span class="time-marker">[@TimeSpan.FromSeconds(line.Time).ToString(@"mm\:ss")]</span>
                                            <span class="lyric-text">@line.Text</span>
                                        </div>
                                    }
                                </div>
                            }
                            catch (Exception ex)
                            {
                                <div class="error-message">Lỗi hiển thị lyrics: @ex.Message</div>
                            }
                        }
                        else
                        {
                            <pre class="lyric-text">@Model.Lyrics.First().Content</pre>
                        }
                    }
                </div>
            }
        </div>
    </div>

    <div class="song-player">
        <div class="song-content">
            <!-- Cột trái -->
            <div class="left-column">
                <!-- Ảnh bài hát -->
                <div class="song-image">
                    <img src="@Model.ImageUrl" alt="@Model.Title" />
                    @if (User.IsInRole("Admin") || (User.Identity.IsAuthenticated && Model.Artists?.userId == User.FindFirstValue(ClaimTypes.NameIdentifier)))
                    {
                        <div class="add-lyric-button" id="addLyricButton">
                            <i class="fas @(Model.Lyrics != null && Model.Lyrics.Any() ? "fa-edit" : "fa-plus")"></i>
                            <span>@(Model.Lyrics != null && Model.Lyrics.Any() ? "Chỉnh sửa lời bài hát" : "Thêm lời bài hát")</span>
                        </div>
                    }
                </div>
                
                <!-- Thông tin bài hát -->
                <div class="song-header">
                    <div class="title-container">
                        <h1 class="song-title">@Model.Title</h1>
                        <div class="heart-container">
                            <i class="fas fa-heart heart-icon"></i>
                            <span class="like-count">@Model.LikeCount</span>
                        </div>
                    </div>
                    <div class="artist-row">
                        <span class="artist-name">@Model.Artists?.ArtistName</span>
                    </div>
                </div>
            </div>
            
            <!-- Phần Lyrics -->
            <div class="lyrics-section">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3>Lời bài hát</h3>
                    @if (User.IsInRole("Admin") || Model.Artists?.userId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                    {
                        <button class="btn btn-primary" onclick="showLyricModal()">
                            <i class="fas @(Model.Lyrics != null && Model.Lyrics.Any() ? "fa-edit" : "fa-plus")"></i>
                            @(Model.Lyrics != null && Model.Lyrics.Any() ? "Chỉnh sửa lời bài hát" : "Thêm lời bài hát")
                        </button>
                    }
                </div>

                @if (Model.Lyrics != null && Model.Lyrics.Any())
                {
                    var lyrics = Model.Lyrics.FirstOrDefault();
                    if (lyrics != null)
                    {
                        <div class="lyrics-container">
                            @if (!string.IsNullOrEmpty(lyrics.Content))
                            {
                                <div class="lyrics-content">
                                    <pre class="lyric-text">@lyrics.Content</pre>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i> Chưa có lời bài hát
                    </div>
                }
            </div>
        </div>
    </div>
    
    <!-- Thanh phát nhạc kiểu mới (giống Index.cshtml) -->
    <div id="nowPlayingBar" class="now-playing-bar">
        <div class="now-playing-left">
            <div class="now-playing-cover">
                <img id="nowPlayingImage" src="@Model.ImageUrl" alt="@Model.Title">
            </div>
            <div class="track-info">
                <span id="nowPlayingTitle" class="song-name">@Model.Title</span>
                <span id="nowPlayingArtist" class="artist-name">@Model.Artists?.ArtistName</span>
            </div>
        </div>
        <div class="now-playing-center">
            <div class="player-controls">
                <button onclick="previousSong()" class="control-button">
                    <i class="fas fa-step-backward"></i>
                </button>
                <button onclick="togglePlay()" class="control-button play-pause-btn" id="playPauseButton">
                    <i class="fas fa-play"></i>
                </button>
                <button onclick="nextSong()" class="control-button">
                    <i class="fas fa-step-forward"></i>
                </button>
            </div>
            <div class="playback-bar">
                <span id="currentTime" class="time">0:00</span>
                <div class="progress-bar">
                    <input type="range" id="seekBar" value="0" class="seek-bar">
                    <div class="progress-bar-bg"></div>
                </div>
                <span id="duration" class="time">0:00</span>
            </div>
        </div>
        <div class="now-playing-right">
            <button onclick="toggleMute()" class="control-button" id="volumeButton">
                <i class="fas fa-volume-up"></i>
            </button>
            <div class="volume-bar-container">
                <input type="range" id="volumeBar" value="100" class="volume-bar">
                <div class="volume-bar-bg"></div>
            </div>
        </div>
    </div>

    <!-- Modal thêm lời bài hát -->
    <div class="modal fade" id="addLyricModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Thêm lời bài hát</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="lyricForm" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="lyricSongId" name="SongId" value="@Model.SongId" />
                        
                        <!-- Tab Navigation -->
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-bs-toggle="tab" href="#normalLyrics">Lời bài hát</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#syncedLyrics">Lời bài hát đồng bộ</a>
                            </li>
                        </ul>

                        <!-- Tab Content -->
                        <div class="tab-content mt-3">
                            <!-- Normal Lyrics Tab -->
                            <div class="tab-pane fade show active" id="normalLyrics">
                                <div class="mb-3">
                                    <textarea id="lyricContent" name="Content" class="form-control" rows="10" 
                                        placeholder="Nhập lời bài hát ở đây..."></textarea>
                                </div>
                            </div>

                            <!-- Synced Lyrics Tab -->
                            <div class="tab-pane fade" id="syncedLyrics">
                                <div class="lyric-sync-editor">
                                    <div class="timing-controls mb-3">
                                        <button type="button" id="startSyncing" class="btn btn-primary">
                                            <i class="fas fa-play"></i> Bắt đầu đồng bộ
                                        </button>
                                        <button type="button" id="markTimestamp" class="btn btn-info" disabled>
                                            <i class="fas fa-clock"></i> Đánh dấu thời gian
                                        </button>
                                        <button type="button" id="resetSync" class="btn btn-warning">
                                            <i class="fas fa-redo"></i> Bắt đầu lại
                                        </button>
                                    </div>
                                    <div id="syncPreview" class="mb-3"></div>
                                    <input type="hidden" id="syncedContentInput" name="SyncedContent" />
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                            <button type="button" class="btn btn-primary" onclick="submitLyricForm()">Cập nhật</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Truyền dữ liệu từ Model sang JavaScript
        window.songData = {
            title: '@Model.Title',
            artist: '@Model.Artists',
            fileUrl: '@Model.FileUrl',
            imageUrl: '@Model.ImageUrl',
            userIsAdmin: @Json.Serialize(User.IsInRole("Artist")),
            userIsOwner: @Json.Serialize(Model.Artists.userId == User.FindFirstValue(ClaimTypes.NameIdentifier))
        };
    </script>
    <script src="~/js/song-details.js"></script>
    <script src="@Url.Content("~/js/navigation.js")" asp-append-version="true"></script>
    <!-- Thêm ngay sau thẻ <body> -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert" 
             style="position: fixed; top: 20px; left: 50%; transform: translateX(-50%); z-index: 9999; min-width: 300px;">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <script>
        // Đảm bảo backdrop luôn được dọn dẹp
        document.addEventListener('DOMContentLoaded', function() {
            // Khắc phục lỗi backdrop
            const cancelButton = document.getElementById('cancelButton');
            if (cancelButton) {
                cancelButton.addEventListener('click', function() {
                    const modalElement = document.getElementById('addLyricModal');
                    const modalInstance = bootstrap.Modal.getInstance(modalElement);
                    
                    if (modalInstance) {
                        modalInstance.hide();
                        
                        // Dọn dẹp backdrop sau khi modal ẩn
                        setTimeout(function() {
                            document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
                            document.body.classList.remove('modal-open');
                            document.body.style.overflow = '';
                            document.body.style.paddingRight = '';
                        }, 300);
                    }
                });
            }
            
            // Thêm sự kiện cho nút X
            const closeX = document.getElementById('modalCloseX');
            if (closeX) {
                closeX.addEventListener('click', function() {
                    setTimeout(function() {
                        document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
                        document.body.classList.remove('modal-open');
                        document.body.style.overflow = '';
                        document.body.style.paddingRight = '';
                    }, 300);
                });
            }
        });
    </script>

    <script>
    function showLyricModal() {
        const modal = new bootstrap.Modal(document.getElementById('addLyricModal'));
        modal.show();
    }
    </script>

    <!-- Script để khởi tạo đồng bộ lyrics -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Khởi tạo chức năng đồng bộ lyrics
        initLyricSyncing();
        
        // Xử lý form submit
        window.submitLyricForm = function() {
            const form = document.getElementById('lyricForm');
            const formData = new FormData(form);
            
            fetch('/Lyrics/AddLyric', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Có lỗi xảy ra khi lưu lời bài hát');
                }
            })
            .catch(error => {
                console.error('Lỗi:', error);
                alert('Có lỗi xảy ra khi lưu lời bài hát');
            });
        };
        
        // Hiển thị modal
        window.showLyricModal = function() {
            const modal = new bootstrap.Modal(document.getElementById('addLyricModal'));
            modal.show();
        };
    });
    </script>
</body>
</html>

@functions {
    public static string FormatLyricContent(string content)
    {
        if (string.IsNullOrEmpty(content))
            return string.Empty;
            
        // Chuyển đổi xuống dòng thành thẻ <br>
        return content
            .Replace("\r\n", "<br>")
            .Replace("\n", "<br>")
            .Replace("\r", "<br>");
    }
}
