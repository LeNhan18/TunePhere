@model TunePhere.Models.Song
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    ViewData["Title"] = Model.Title;
    Layout = null;
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}
@await Html.PartialAsync("_NavigationPartial") 
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="__RequestVerificationToken" content="@token" />
    <title>@Model.Title - TunePhere</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/song-details.css" />
    <link rel="stylesheet" href="~/css/player.css" />
    <link rel="stylesheet" href="~/css/navigation.css">
</head>
<body>
    <!-- Nút quay lại - Được tạo mới và đặt ở vị trí tốt hơn -->
    <div class="back-button-wrapper">
        <a href="@Url.Action("Index", "Home")" class="back-button">
            <i class="fas fa-arrow-left"></i>
        </a>
    </div>

    <div class="song-player">
        <div class="song-content">
            <div class="left-column">
                <div class="song-image">
                    <img src="@Model.ImageUrl" alt="@Model.Title" />
                    <div class="music-icon"><i class="fas fa-music"></i> Ngải Thần</div>
                    
                    <!-- Nút thêm lyric, làm nổi bật hơn -->
                    <div class="add-lyric-button" id="addLyricButton">
                        <i class="fas fa-plus"></i>
                        <span>Thêm lời bài hát</span>
                    </div>
                </div>
                
                <div class="song-info">
                    <h1 class="song-title">@Model.Title @(Model.Title.Contains("Remix") ? "" : "")</h1>
                    <div class="artist-row">
                        <span class="artist-name">@Model.Artists?.ArtistName</span>
                    </div>
                    <div class="like-row">
                        <i class="fas fa-heart heart-icon"></i>
                        <span class="like-count">@Model.LikeCount</span>
                    </div>
                </div>
            </div>
            
            <div class="lyrics-container">
                @if (Model.Lyrics != null && Model.Lyrics.Any())
                {
                    <div class="lyrics-content">
                        @foreach (var lyric in Model.Lyrics)
                        {
                            <pre class="lyric-text">@Html.Raw(lyric.Content)</pre>
                        }
                    </div>
                }
                else
                {
                    <div class="lyrics-content">
                        <p>Chưa có lời bài hát</p>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <!-- Thanh phát nhạc kiểu mới (giống Index.cshtml) -->
    <div id="nowPlayingBar" class="now-playing-bar">
        <div class="now-playing-left">
            <div class="now-playing-cover">
                <img id="nowPlayingImage" src="@Model.ImageUrl" alt="@Model.Title">
            </div>
            <div class="track-info">
                <span id="nowPlayingTitle" class="song-name">@Model.Title</span>
                <span id="nowPlayingArtist" class="artist-name">@Model.Artists?.ArtistName</span>
            </div>
        </div>
        <div class="now-playing-center">
            <div class="player-controls">
                <button onclick="previousSong()" class="control-button">
                    <i class="fas fa-step-backward"></i>
                </button>
                <button onclick="togglePlay()" class="control-button play-pause-btn" id="playPauseButton">
                    <i class="fas fa-play"></i>
                </button>
                <button onclick="nextSong()" class="control-button">
                    <i class="fas fa-step-forward"></i>
                </button>
            </div>
            <div class="playback-bar">
                <span id="currentTime" class="time">0:00</span>
                <div class="progress-bar">
                    <input type="range" id="seekBar" value="0" class="seek-bar">
                    <div class="progress-bar-bg"></div>
                </div>
                <span id="duration" class="time">0:00</span>
            </div>
        </div>
        <div class="now-playing-right">
            <button onclick="toggleMute()" class="control-button" id="volumeButton">
                <i class="fas fa-volume-up"></i>
            </button>
            <div class="volume-bar-container">
                <input type="range" id="volumeBar" value="100" class="volume-bar">
                <div class="volume-bar-bg"></div>
            </div>
        </div>
    </div>

    <!-- Modal thêm lời bài hát -->
    <div class="modal fade" id="addLyricModal" tabindex="-1" aria-labelledby="addLyricModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark text-white">
                <div class="modal-header">
                    <h5 class="modal-title" id="addLyricModalLabel">Thêm lời cho bài hát: @Model.Title</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form action="/Lyrics/AddLyric" method="post">
                    <div class="modal-body">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="SongId" value="@Model.SongId" />
                        <input type="hidden" name="Language" value="vi" />
                        
                        <div class="mb-3">
                            <label for="Content" class="form-label">Lời bài hát</label>
                            <textarea class="form-control bg-dark text-white" name="Content" rows="10" 
                                      placeholder="Nhập lời bài hát ở đây..." required></textarea>
                            <small class="form-text text-muted">Mỗi dòng sẽ được hiển thị theo đúng định dạng xuống dòng</small>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-success">Lưu lại</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Hidden audio element -->
    <audio id="audioPlayer" style="display: none;"></audio>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        window.songData = {
            fileUrl: '@Model.FileUrl',
            imageUrl: '@Model.ImageUrl',
            title: '@Model.Title',
            artist: '@Model.Artists?.ArtistName',
            songId: '@Model.SongId',
                   artistId: '@Model.ArtistId',
        userIsAdmin: '@User.IsInRole("Admin")' === 'True',
        userIsOwner: '@(User.Identity.Name == Model.Artists?.ArtistName || User.Claims.Any(c => c.Type == "ArtistId" && c.Value == Model.ArtistId.ToString()))' === 'True'
        };
    </script>
    <script src="~/js/song-details.js"></script>

    <!-- Thêm ngay sau thẻ <body> -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert" 
             style="position: fixed; top: 20px; left: 50%; transform: translateX(-50%); z-index: 9999; min-width: 300px;">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
</body>
</html>

@functions {
    public static string FormatLyricContent(string content)
    {
        if (string.IsNullOrEmpty(content))
            return string.Empty;
            
        // Chuyển đổi xuống dòng thành thẻ <br>
        return content
            .Replace("\r\n", "<br>")
            .Replace("\n", "<br>")
            .Replace("\r", "<br>");
    }
}
